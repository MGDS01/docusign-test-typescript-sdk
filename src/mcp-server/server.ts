/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { DocusignTypescriptTest2Core } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$workspaceDocumentsDeleteWorkspaceDocument } from "./tools/workspaceDocumentsDeleteWorkspaceDocument.js";
import { tool$workspaceDocumentsGetWorkspaceDocument } from "./tools/workspaceDocumentsGetWorkspaceDocument.js";
import { tool$workspaceDocumentsGetWorkspaceDocumentContents } from "./tools/workspaceDocumentsGetWorkspaceDocumentContents.js";
import { tool$workspaceDocumentsGetWorkspaceDocuments } from "./tools/workspaceDocumentsGetWorkspaceDocuments.js";
import { tool$workspacesCreateWorkspace } from "./tools/workspacesCreateWorkspace.js";
import { tool$workspacesCreateWorkspaceEnvelope } from "./tools/workspacesCreateWorkspaceEnvelope.js";
import { tool$workspacesGetWorkspace } from "./tools/workspacesGetWorkspace.js";
import { tool$workspacesGetWorkspaceAssignableRoles } from "./tools/workspacesGetWorkspaceAssignableRoles.js";
import { tool$workspacesGetWorkspaceEnvelopes } from "./tools/workspacesGetWorkspaceEnvelopes.js";
import { tool$workspacesGetWorkspaces } from "./tools/workspacesGetWorkspaces.js";
import { tool$workspaceUsersAddWorkspaceUser } from "./tools/workspaceUsersAddWorkspaceUser.js";
import { tool$workspaceUsersGetWorkspaceUsers } from "./tools/workspaceUsersGetWorkspaceUsers.js";
import { tool$workspaceUsersRestoreWorkspaceUserAccess } from "./tools/workspaceUsersRestoreWorkspaceUserAccess.js";
import { tool$workspaceUsersRevokeWorkspaceUserAccess } from "./tools/workspaceUsersRevokeWorkspaceUserAccess.js";
import { tool$workspaceUsersUpdateWorkspaceUser } from "./tools/workspaceUsersUpdateWorkspaceUser.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  oAuth2?: SDKOptions["oAuth2"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "DocusignTypescriptTest2",
    version: "0.1.2",
  });

  const client = new DocusignTypescriptTest2Core({
    oAuth2: deps.oAuth2,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$workspaceDocumentsGetWorkspaceDocuments);
  tool(tool$workspaceDocumentsGetWorkspaceDocument);
  tool(tool$workspaceDocumentsDeleteWorkspaceDocument);
  tool(tool$workspaceDocumentsGetWorkspaceDocumentContents);
  tool(tool$workspaceUsersGetWorkspaceUsers);
  tool(tool$workspaceUsersAddWorkspaceUser);
  tool(tool$workspaceUsersUpdateWorkspaceUser);
  tool(tool$workspaceUsersRevokeWorkspaceUserAccess);
  tool(tool$workspaceUsersRestoreWorkspaceUserAccess);
  tool(tool$workspacesGetWorkspaces);
  tool(tool$workspacesCreateWorkspace);
  tool(tool$workspacesGetWorkspace);
  tool(tool$workspacesGetWorkspaceAssignableRoles);
  tool(tool$workspacesCreateWorkspaceEnvelope);
  tool(tool$workspacesGetWorkspaceEnvelopes);

  return server;
}
