/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { workspaceUsersUpdateWorkspaceUser } from "../../funcs/workspaceUsersUpdateWorkspaceUser.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.UpdateWorkspaceUserRequest$inboundSchema,
};

export const tool$workspaceUsersUpdateWorkspaceUser: ToolDefinition<
  typeof args
> = {
  name: "workspace-users-update-workspace-user",
  description: `Updates the specified user's role

This operation updates the specified user's role in the workspace. Users within the account are considered "Internal" and may be assigned any role. Users outside the account are considered "External" and may only be assigned "External" roles.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await workspaceUsersUpdateWorkspaceUser(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
