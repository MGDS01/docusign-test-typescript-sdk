/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { workspaceUsersRestoreWorkspaceUserAccess } from "../../funcs/workspaceUsersRestoreWorkspaceUserAccess.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.RestoreWorkspaceUserAccessRequest$inboundSchema,
};

export const tool$workspaceUsersRestoreWorkspaceUserAccess: ToolDefinition<
  typeof args
> = {
  name: "workspace-users-restore-workspace-user-access",
  description: `Restores the specified user's access to the workspace

This operation restores the specified user's access to the workspace. The user must have been previously revoked from the workspace. The access is immediately restored.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await workspaceUsersRestoreWorkspaceUserAccess(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
